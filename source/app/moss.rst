
.. _mossbauer:

穆斯堡尔谱
================================================

同质异能位移（isomer shift；:math:`\delta^{IS}`）是穆斯堡尔谱的重要观测参量之一，它源于具有一定尺寸的原
子核与周围电子分布之间的库仑相互作用。当原子处在不同的外界环境，导致原子核附近的库仑能发生变化，
而 :math:`\delta^{IS}` 对这种变化极其敏感，因此可以用来研究原子的氧化态，自旋态，以及配位环境。
穆斯堡尔谱的另一个重要观测参量是四级分裂，来源于原子核的电四极矩与原子核周围电场梯度（electric field gradient；EFG）之间的相互作用。
此外，当原子置于外磁场中，由于原子核存在核磁矩，穆斯堡尔谱会进一步发生 Zeeman 分裂。

:math:`\delta^{IS}` 可以表示为重元素在测试体系A和参照体系R中“有效接触密度”（effective contact density；ECD）
或“接触密度”（contact density；CD）变化量的线性函数：

.. math::
    \delta^{IS} &= \alpha(\rho_{A}-\rho_{R}) \\
    &= \alpha(\rho_{A}-C)+\beta

其中 :math:`\delta^{IS}` 是测试体系A相对于参照系R的同质异能位移实验值，
ECD（或CD）值 :math:`\rho_{A}` 和 :math:`\rho_{R}` 可以通过理论计算获得，
:math:`\alpha` 和 :math:`\beta` 是待拟合的参数，其中 :math:`\alpha` 也称为核标定常数（nuclear calibration constant），
:math:`C` 是任意量，一般取ECD（或CD）的整数部分。考虑到 :math:`\rho_{R}` 理论值存在误差，一般用后一个公式进行拟合。

.. note::

    CD假定原子核附近的电子密度是均匀分布的，因此可以用一个点的电子密度代替（一般取原子核中心位置的密度，
    但也有程序取一系列样点的密度做加权平均）；ECD考虑了电子密度的非均匀分布，原则上比前者更合理。
    很多程序计算的是CD，而在BDF中计算ECD，二者满足简单的换算关系（参见文献 :cite:`ecd2020` 的Table S2、S3）。

为了准确计算ECD极其相对变化量，需要考虑以下两个因素：

* 原子核具有一定的尺寸分布，而默认的点电荷近似会导致几个数量级的误差！为此需要在 ``xuanyuan`` 模块设定 ``nuclear`` =1。
* 需要考虑相对论效应。对于重元素这是显而易见的；即便对于某些轻元素也必须要考虑相对论效应，
  这是因为在非相对论情况下， *p* 轨道上的电子在原子核附近没有分布（参见文献 :cite:`ecd2020` 的Table S6），
  从而对 *p* 区元素的ECD造成定性错误。在BDF中可以用sf-X2C哈密顿或其局域变体考虑标量相对论效应，
  通过 ``xuanyuan`` 模块中的 ``heff`` =21（标准sf-X2C），22（sf-X2C-AXR），或23（sf-X2C-AU）指认。

铁（ :math:`^{57}Fe` ）化合物的有效接触密度
------------------------------------------------

计算ECD需要非常陡峭（也就是高斯指数非常大）的 *s* 型高斯基函数才能准确描述电子在 :math:`^{57}Fe` 原子核附近的分布；
对于存在 *p* 价电子的 *p* 区元素，还需要非常陡峭的 *p* 型高斯基函数，而基组库中的标准收缩基组通常不符合要求。
建议对 :math:`^{57}Fe` 采用cc-pVnZ型或ANO型全电子相对论基组，并把其中的 *s* 函数（ *p* 区元素还有 *p* 函数）进行非收缩处理。

（Fe的基组文件）

（输入文件）

（结果）

汞化合物的有效接触密度
------------------------------------------------

对于4d以上的元素，
经验表明默认的高斯指数还不够，需要额外补充一些更陡峭的高斯指数。
例如，选择标准基组中最陡峭的4-6个 *s* 、 *p* 型高斯指数（α），它们近似满足以下线性关系：

.. math::
    \ln\alpha_i = A + i\,B, \qquad i = 1, 2, \ldots

通过线性拟合得到参数A、B，再通过外推（i的间隔取-0.5或-1），即可得到更陡峭的高斯指数。
一般加入2-5个更陡峭的 *s* 函数、1-3个更陡峭的 *p* 函数即可满足要求，但是要避免用1.0E+11以上的高斯指数，
因为这可能会造成数值不稳定。
